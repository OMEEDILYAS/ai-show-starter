“fitting”, we typically mean optimizing/learning model parameters so that they minimize some loss function, e.g., the negative log-likelihood. With maximum likelihood (Section 8.3.1) and maximum a posteriori estimation(Section8.3.2),wealreadydiscussedtwocommonlyusedalgorithms formodelfitting. TheparametrizationofthemodeldefinesamodelclassM withwhich θ wecanoperate.Forexample,inalinearregressionsetting,wemaydefine the relationship between inputs x and (noise-free) observations y to be y = ax+b,whereθ := a,b arethemodelparameters.Inthiscase,the { } model parameters θ describe the family of affine functions, i.e., straight lines with slope a, which are offset from 0 by b. Assume the data comes Draft(2019-12-11)of“MathematicsforMachineLearning”.Feedback:https://mml-book.com. 8.3 ParameterEstimation 271 Figure8.8 Fitting 4 (bymaximum 2 likelihood)of 0 differentmodel − 2 classestoa 4 regressiondataset. − 4 2 0 2 4 − − x y Trainingdata 4 MLE 2 0 2 − 4 − 4 2 0 2 4 − − x (a)Overfitting y Trainingdata 4 MLE 2 0 2 − 4 − 4 2 0 2 4 − − x (b)Underfitting. y Trainingdata MLE (c)Fittingwell. from a model M∗, which is unknown to us. For a given training dataset, we optimize θ so that M is as close as possible to M∗, where the “closeθ ness” is defined by the objective function we optimize (e.g., squared loss onthetrainingdata).Figure8.7illustratesasettingwherewehaveasmall model class (indicated by the circle M ), and the data generation model θ M∗ lies outside the set of considered models. We begin our parameter search at M . After the optimization, i.e., when we obtain the best posθ0 sible parameters θ∗, we distinguish three different cases: (i) overfitting, (ii) underfitting, and (iii) fitting well. We will give a high-level intuition ofwhatthesethreeconceptsmean. Roughly speaking, overfitting refers to the situation where the para- overfitting metrized model class is too rich to model the dataset generated by M∗, i.e.,M couldmodelmuchmorecomplicateddatasets.Forinstance,ifthe θ dataset was generated by a linear function, and we define M to be the θ class of seventh-order polynomials, we could model not only linear functions, but also polynomials of degree two, three, etc. Models that overfit typically have a large number of parameters. An observation we often Onewaytodetect makeisthattheoverlyflexiblemodelclassM usesallitsmodelingpower overfittingin θ practiceisto to reduce the training error. If the training data is noisy, it will therefore observethatthe findsomeuseful signal inthenoiseitself.Thiswill causeenormousprobmodelhaslow lemswhenwepredictawayfromthetrainingdata.Figure8.8(a)givesan trainingriskbut example of overfitting in the context of regression where the model pa- hightestriskduring rametersarelearnedbymeansofmaximumlikelihood(seeSection8.3.1). crossvalidation (Section8.2.4). WewilldiscussoverfittinginregressionmoreinSection9.2.2. When we run into underfitting, we encounter the opposite problem underfitting where the model class M is not rich enough. For example, if our dataset θ was generated by a sinusoidal function, but θ only parametrizes straight lines, the best optimization procedure will not get us close to the true model.However,westilloptimizetheparametersandfindthebeststraight line that models the dataset. Figure 8.8(b) shows an example of a model thatunderfitsbecauseitisinsufficientlyflexible.Modelsthatunderfittypicallyhavefewparameters. The third case is when the parametrized model class is about right. Then,ourmodelfitswell,i.e.,itneitheroverfitsnorunderfits.Thismeans our model class is just rich enough to describe the dataset we are given. Figure8.8(c)showsamodelthatfitsthegivendatasetfairlywell.Ideally, (cid:13)c2019M.P.Deisenroth,A.A.Faisal,C.S.Ong.TobepublishedbyCambridgeUniversityPress. 272 WhenModelsMeetData this is the model class we would want to work with since it has good generalizationproperties. In practice, we often define very rich model classes M with many paθ rameters,suchasdeepneuralnetworks.Tomitigatetheproblemofoverfitting,wecanuseregularization(Section8.2.3)orpriors(Section8.3.2). WewilldiscusshowtochoosethemodelclassinSection8.6. 8.3.4 Further