of the polyhedron.(Morethanoneoptimalsolutionmayexistifanedgeorevenawhole faceofthepolyhedronisalocalmaximum.) simplex Themostpopularalgorithmforsolvinglinearprogramsisthesimplexalgorithm. algorithm Thisalgorithmworksbyidentifyingonevertexofthepolyhedronandthentaking uphill (i.e., objective-function-improving) steps to neighboring vertices until an optimumis found. This algorithm requiresanexponentialnumberofstepsin the worstcase,butisusuallyveryefficientinpractice. Although the simplex algorithm is not polynomial, it can be shown that other interior-point algorithmscalledinterior-pointmethodssolvelinearprogramsinworst-casepolymethod nomialtime. Thesealgorithmsgettheirnamefromthefactthattheymovethrough the interiorregionofthe polyhedronratherthan jumpfrom onevertexto another. Surprisingly,althoughthesealgorithmsdominatethesimplexmethodintheworst case,theycanbemuchslowerinpractice. B.2 Integerprograms Definingintegerprograms integerprogram Integerprogramsarelinearprogramsinwhichoneadditionalconstraintholds:the variablesarerequiredtotakeintegral(ratherthanreal)values. This makesitpossible to express combinatorial optimization problems such as satisfiability or set packingas integerprograms. A usefulsubclass of integerprogramsare 0–1 integer programs, in which each variable is constrained to take either the value 0 or thevalue1. TheseprogramsaresufficienttoexpressanyprobleminNP.Theform Freeforon-screenuse;pleasedonotdistribute.Youcangetanotherfreecopy ofthisPDFororderthebookathttp://www.masfoundations.org. 472 B LinearandIntegerProgramming ofa0–1integerprogramisasfollows. n maximize w x i i i=1 X n subjectto a x b j =1...m ij i j ≤ ∀ i=1 X x 0,1 i= 1...n i ∈ { } ∀ mixed-integer Another useful class of integer programs is mixed-integer programs, which inprogram volveacombinationofintegerandreal-valuedvariables. Finally, as in the LP case, both integer and mixed-integer programs can come without an associated objective function, in which case they reduce to constraintsatisfactionproblems. Solvingintegerprograms The introduction of an integrality constraint to linear programs leads to a much hardercomputationalproblem: NP-hardevenwhenvariablesarerestrictedtotwo discretevalues. Thus,itshouldnotbesurprisingthatthereisnoefficientprocedure forsolvingintegerprograms. branch-and- Themostcommonlyusedtechniqueisbranch-and-boundsearch. Thespaceof bound variableassignmentsis exploreddepth-first: firstonevariableis assignedavalue, search then the next, and so on; when a constraint is violated or a complete variable assignmentisachieved,thesearchbacktracksandtriesotherassignments. Thebest feasiblesolutionfoundsofarisrecordedasalowerboundonthevalueoftheoplinearprogram timal solution. At each search node the linear program relaxation of the integer relaxation programissolved: thisisthelinearprogramwheretheremainingvariablesareallowedtotakerealratherthanintegralvaluesbetweentheminimumandmaximum values in their domains. It is easy to see that the value of a linear program relaxationofanintegerprogramisanupperboundonthevalueofthatintegerprogram, sinceitinvolvesalooseningofthelatterproblem’sconstraints. Branch-and-bound searchdiffersfromstandarddepth-firstsearchbecauseitsometimesprunesthetree. Specifically, branch-and-boundbacktracks wheneverthe upperbound at a search nodeislessthanorequaltothelowerbound.Inthiswayitcanskipoverlargeparts ofthesearchtreewhilestillguaranteeingthatitwillfindtheoptimalsolution. Other, more complex techniques for solving integer programs include branchand-cut and branch-and-price search. These methods offer no advantage over branch-and-boundsearchintheworstcase,butoftenoutperformitinpractice. Althoughtheyarecomputationallyintractableintheworstcase,sometimesintegerprogramsareprovablyeasy. Thisoccurswhenitcanbeshownthatthesolution tothelinearprogrammingrelaxationisintegral,meaningthattheintegerprogram canbe solvedin polynomialtime. One importantexampleis whenthe constraint total matrixistotallyunimodularandthevectorbisintegral. Aunimodularmatrixisa unimodularity UncorrectedmanuscriptofMultiagentSystems,publishedbyCambridgeUniversityPress Revision1.1©Shoham&Leyton-Brown,2009,2010. B.2 Integerprograms 473 squarematrixwhosedeterminantiseither 1or1;atotallyunimodularmatrixis − one for which every squaresubmatrix is unimodular. This definition implies that theentriesinatotallyunimodularmatrixcanonlybe 1,0,and1. − Freeforon-screenuse;pleasedonotdistribute.Youcangetanotherfreecopy ofthisPDFororderthebookathttp://www.masfoundations.org. C Markov Decision Problems (MDPs) We briefly review the main ingredients of Markov Decision Problems or MDPs, which,aswediscussinChapter6,canbeviewedassingle-agentstochasticgames. TheliteratureonMDPsisrich,andthereaderisreferredtothemanytextbookson thesubjectforfurtherreading. C.1 The model An MDP is a model for decision making in an uncertain, dynamic world. The (single)agentstartsoutinsomestate,takesanaction,andreceivessomeimmediate rewards. The state then transitions probabilistically to some other state and the processrepeats. Formally speaking, an MDP is a tuple (S,A,p,r). S is a setof states and A is a set ofactions. The functionp : S A S R specifiesthe × × 7→ transitionprobabilityamongstates: p(s,a,s′)istheprobabilityofendinginstate s′whentakingactionainstates. Finally,thefunctionr :S A Rreturnsthe × 7→ rewardforeachstate-actionpair. Theindividualrewardsareaggregatedinoneoftwoways. Thelimit-averagereward: lim∞ T t=1 r(t) ,wherer(t) istherewardattimet. T=1 T P Thefuture-discountedreward: ∞ βr(t), where 0 < β < 1 is the discount t=1 factor. P (Thereaderwillnoticethatbothofthesedefinitionsmustberefinedtoaccountfor casesinwhich(inthefirstcase)thelimitisilldefined,andinwhich(inthesecond case)thesumisinfinite. Wedonotdiscussthesesubtletieshere.) A(stationary,deterministic)policyΠ: S Amapseachstatetoanaction. 7→ Forconcreteness, in the nextsection we focus on the future-discountedreward case. C.2 Solvingknown MDPs viavalueiteration Every policy yields a reward under either of the reward-aggregationschemes. A optimalpolicy policy that maximizes the total reward is called an optimal policy. The primary 476 C MarkovDecisionProblems(MDPs) computationalchallenge associated with MDPs is to find an optimal policy for a givenMDP. Itispossibletouselinearprogrammingtechniques(seeAppendixB)tocalculate anoptimalpolicyforaknownMDP in polynomialtime. However,we