also a set of agents N∗ N who are interested in ⊆ receivingit. Eachi N∗ valuesthetransmissionatv > 0. i ∈ Our goal is to find a cost-sharing mechanism, a direct quasilinear mechanism (x,℘) thatreceivesdeclarationsvˆ ofeachagenti’s utility anddetermineswhich i agentswillreceivethetransmissionandhowmuchtheywillpay. Thefunctionx determinesa setof usersS N∗ who will receivethe transmission. In orderto ⊆ multicast doso,wemustfindamulticastroutingtreeT(S) Lrootedatα thatspansS. 0 ⊆ routingtree WemakeamonotonicityassumptionaboutthealgorithmusedtofindT(S), S S T(S ) T(S ). 1 2 1 2 ⊆ ⇒ ⊆ The mechanism also includes a payment function ℘ that ensures that the agents in S sharethe costs ofthe links in T(S). We denotethe paymentcollected from i S as p . We assume that the mechanism is computedby trusted hardwarein i ∈ thenetwork(e.g.,therouters);however,wewillbeconcernedwithcommunication complexity,andhencewilllookforwaysthatthiscomputationcanbedistributed throughoutthesystem. Ideally,wewouldlikeacost-sharingmechanismtobedominant-strategyincentive compatible, budget balanced, and efficient. However, we have already seen (Theorem 10.4.11) that such mechanisms do not exist. Thus, we will consider mechanismsthatachievetwoofthesepropertiesandrelaxthethird. UncorrectedmanuscriptofMultiagentSystems,publishedbyCambridgeUniversityPress Revision1.1©Shoham&Leyton-Brown,2009,2010. 10.6 Computationalapplicationsofmechanismdesign 313 Truthfulandbudgetbalanced: TheShapleyvaluemechanism First, wewill describea dominant-strategytruthfulmechanismthat achievesbudgetbalanceattheexpenseofefficiency. Intuitively,thismechanismisbuiltaround theideathatthecostofalinkshouldbedividedequallyamongtheagentsthatuse it. Itsnamecomesfromthefactthatthisobjectivecanbeseenasaspecialcaseof theShapleyvaluefromcoalitionalgametheory(seeSection12.2.1). Wedescribe acentralizedversionofthemechanisminFigure10.6. S N∗ //assumethateveryagentwillreceivethetransmission ← repeat FindthemulticastroutingtreeT(S) Computepaymentsp suchthateachagentipaysanequalshareofthe i costforeverylinkinT( i ) { } foreachi S do ∈ ifvˆ < p then S S i //iisdroppedfromS i i ← \{ } untilnoagentsweredroppedfromS Figure10.6:AnalgorithmforcomputingtheallocationandpaymentsfortheShapleyvaluemechanism. Toseewhythisalgorithmleadstoadominant-strategytruthfulmechanism,observethatthepaymentsare“cross-monotonic.” Thismeansthateachagent’spaymentcanonly increasewhen anotheragentis dropped,and hencethatan agent’s incentives are not affected by the order in which agents are dropped by the algorithm. Thatis,ifthepaymentthatthemechanismwouldchargeanagentigivena setofotheragentsS exceedsi’s utility, theni’s paymentis guaranteedto exceed his utility for all subsets of the other agents S′ S. Since we only drop agents ⊂ when their proposed payments exceed their utilities, the order in which we drop themisunimportant. Becausewecandropagents“greedily”(i.e.,withouthaving to consider the possibility of reinstating them) the algorithm runs in polynomial time. This algorithm canbe run in a network by havingall agents send theirutilities tosomenode(e.g.,thesourceα )andthenrunningthealgorithmthere. However, 0 although the algorithm is computationally tractable, this centralized approach requires an unreasonable amount of communication as the network becomes large. Thus, we would prefer a distributed solution. Unfortunately, no distributed algorithm can compute the same allocation and payments using asymptotically less communicationthanthecentralizedsolution. Theorem10.6.5 Any(deterministicorrandomized)distributedalgorithmthatcomputesthesameallocationandpaymentsastheShapleyvaluealgorithmmustsend Ω(N∗ )bitsoverlinearlymanylinksintheworstcase. | | Freeforon-screenuse;pleasedonotdistribute.Youcangetanotherfreecopy ofthisPDFororderthebookathttp://www.masfoundations.org. 314 10 ProtocolsforStrategicAgents:MechanismDesign //Upwardpass foreachnodei,bottomupdo m vˆ c(l ) i i i ← − foreachnodej childrenofido ∈ m m +max(m ,0) i i j ← //Downwardpass S ← ∅ s m root root ← foreachnodei,topdowndo ifs 0then i ≥ S S i ← { } p max(vˆ s ,0) i i i ← S − foreachnodej childrenofido ∈ s min(s ,m ) j i j ← Figure 10.7: A distributed algorithm for computing the efficient allocation and VCGpaymentsformulticastcostsharing. Truthfulandefficient: TheVCGmechanism Now we consider relaxing the budget balance requirement and instead insisting onefficiency. Unsurprisingly(considerTheorem10.4.3)wemustobtainaGroves mechanism in this case; VCG is the obvious choice. VCG can be easily used as a cost-sharing mechanismin the centralized case. Like the Shapleyvalue mechanism,itrequiresonlypolynomialcomputationandhenceistractable. However,it hasan interestingandimportantadvantageovertheShapleyvaluemechanism: it canalsobemadetoworkefficientlyasadistributedalgorithm. Theorem10.6.6 A distributed algorithm can compute the same allocation and paymentsasVCGbysendingexactlytwovaluesacrosseachlink. Proof. ThealgorithminFigure10.7computesVCGpaymentsandallocations. Letl bethelink connectingnodeito its parent. Everynonrootnodeisends i andreceivesasinglereal-valuedmessageoverl . i Thisalgorithmcanbeunderstoodaspassingmessagesfromonenodeinthetree tothenext. Observethatthefirstforloopproceeds“bottomup”(i.e.,computingm forallchildrenofanodeibeforecomputingmfornodeiitself),whilethesecond forloop proceeds“top down” (i.e., computings fora nodei beforecomputings forany ofi’s children). Thus we can see the m’s