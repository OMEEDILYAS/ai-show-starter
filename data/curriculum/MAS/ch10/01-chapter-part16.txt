the choices and the agents’ valuations by applying linear weights, and then effectively run a Grovesmechanismin the transformedspace. Thus, Theorem 10.5.5says thatwe cannotstrayveryfarfromGrovesmechanismsevenifwearewillingtogiveupon efficiency. Is this the end of the story on dominant-strategyimplementation in quasilinear settings? Notquite. Itturnsoutthattheassumptionthatagentshavegeneralquasilinearpreferencesis a strongone, and doesnothold in manydomainsofinterest. single-parameter As another extreme, we can consider single-parameter valuations: each agent i valuation partitions the set of choices X into a set X in which i “wins” and receives i,wins someconstantpayoffv thatdoesnotdependonthechoicex X ,andaset i i,wins ∈ ofchoicesX = X X in whichi“loses”andreceiveszeropayoff.10 i,loses i,wins \ Importantly, the sets X andX areassumedto be commonknowledge, i,wins i,loses andsotheagent’sprivateinformationcanbesummarizedbyasingleparameter,v . i Suchsettingsarequitepractical:wewillseeseveralthatsatisfytheseconditionsin Chapter11. Single-parametersettingsareinterestingbecauseforsuchpreferences, itispossibletogowellbeyondaffinemaximizers. Infact,additionalcharacterizations exist describing the social choice functions that can be implemented in this and other restricted-preference settings. We will not describe them here, instead referringinterested readersto the works citedat the endofthe chapter. However, we do present a dominant-strategy incentive-compatible, non-affine-maximizing mechanismforasingle-parametersettinginSection11.3.5. 10.5.2 TractableGrovesmechanisms Now we consider a general approach that attempts to implement tractable, inefficient social choice functions by sticking with Groves mechanisms, but replacing the (possibly exponential-time)computationof the argmax with some other polynomial-timealgorithm. Theverycleverideahereis notto buildmechanisms thatareimpossibletomanipulate(indeed,inmanycasesitcanbeshownthatthis cannotbedone),butratherto buildmechanismsthatagentswillbeunableto manipulateinpractice,giventheircomputationallimitations. First,wedefinetheclassofmechanismsbeingconsidered. Groves-based Definition10.5.6(Groves-basedmechanisms) Groves-basedmechanismsaredimechanism rectquasilinearmechanisms(x,℘),forwhich x(vˆ)isanarbitraryfunctionmappingtypedeclarationstochoices;and ℘ (vˆ) = h (vˆ ) vˆ (x(vˆ)). i i −i j − j6=i X 10. Theassumptionthatthissecondpayoffiszerocanbeunderstoodasanormalizationanddoesnotchange thesetofsocialchoicefunctionsthatcanbeimplemented. Freeforon-screenuse;pleasedonotdistribute.Youcangetanotherfreecopy ofthisPDFororderthebookathttp://www.masfoundations.org. 306 10 ProtocolsforStrategicAgents:MechanismDesign That is, a mechanism is Groves based if it uses the Groves payment function, regardless of what allocation function it uses. (Contrast Definition 10.5.6 with Definition10.4.1,whichdefinedaGrovesmechanism.) Most interesting Groves-based mechanisms are not dominant-strategy truthful. Forexample,considerapropertysometimescalledreasonableness: ifthereexists somegoodg thatonlyoneagentivaluesabovezero,g shouldbeallocatedtoi. It can be shown that the only dominant-strategytruthful Groves-basedmechanisms thatsatisfyreasonablenessaretheGrovesmechanismsthemselves. Thisrulesout the use of most greedy algorithms as candidates for the allocation function x in truthfulGroves-basedmechanisms,asmostsuchalgorithmswouldselect“reasonable”allocations. IftractableGroves-basedmechanismslosetheall-importantpropertyofdominantstrategytruthfulness,whyare theystill interesting? The proofofTheorem10.4.2 essentially argued that the Groves paymentfunction aligns agents’ utilities, making all agents prefer the optimal allocation. Groves-based mechanisms still have thisproperty,butmaynotselecttheoptimalallocation. Wecanconcludethatthe onlywayanagentcangainbylyingtoaGroves-basedmechanismistohelpitby causingittoselectamoreefficientallocation. Wenowcometotheideaofasecond-chancemechanism. Intuitively,sincelies byagentscanonlyhelpthemechanism,themechanismcansimplyasktheagents howtheyintendtolieandselectachoicethatwouldbepickedbecauseofsuchalie ifitturnsouttobebetterthanwhatthemechanismwouldhavepickedotherwise. Definition10.5.7(Second-chancemechanisms) GivenaGroves-basedmechanism second-chance (x,℘),asecond-chancemechanismworksasfollows: mechanism 1. Eachagentiisaskedtosubmitavaluationdeclarationvˆ V andanappeal i i ∈ appealfunction functionl : V V. 7→ 2. Themechanismcomputesx(vˆ),andalsox(l (vˆ))foralli N. Fromtheset i ∈ ofchoicesthusidentified, the mechanismkeepsonethatmaximizes the sum of agents’declaredvaluations 3. Themechanismchargeseachagenti℘(vˆ). Intuitively, an appeal function maps agents’ valuations to valuations that they mightinsteadhavechosentoreportbylying. It is importantthattheappealfunctionsbecomputationallybounded(e.g.,theirexecutioncouldbetimelimited). Otherwise,thesefunctionscansolvethesocialwelfaremaximizationproblemandthen selectaninputthatwouldcausex toselectthischoice. Whenappealfunctionsare computationally restricted, we cannot in general say that second-chance mechafeasiblytruthful nisms are truthful. However, they are feasibly truthful, because an agent can use the appeal function to try out any lie that he believes might help him. Thus in a second-chancemechanism,acomputationallylimited agentcandonobetterthan to declarehistrue valuationalongwith thebestappealfunctionhe is able to construct. UncorrectedmanuscriptofMultiagentSystems,publishedbyCambridgeUniversityPress Revision1.1©Shoham&Leyton-Brown,2009,2010. 10.6 Computationalapplicationsofmechanismdesign 307 10.6 Computational applicationsofmechanism design We now survey some applications of mechanism design, to give a sense of some more recent work that has drawn on the theory we have described so far. However, we must offer two caveats. First, we speak here only about computational applicationsofmechanismdesign,bywhichwemeanmechanismsthatcontainan interestingcomputationalingredientand/ormechanismsappliedtocomputational domains (e.g., computer networks). Thus we skip over some highly influential applicationsfromeconomics,suchastheoriesoftaxation,governmentregulation, andcorporatefinance. Second,withoutadoubtthemostsignificantapplicationof mechanismdesign—computationalornot—isthedesignandanalysisofauctions. Becausethere is so muchto say aboutthis application, we deferits discussionto Chapter11. Some of the