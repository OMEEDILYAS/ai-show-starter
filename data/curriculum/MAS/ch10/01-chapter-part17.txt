mechanism design applications we discuss in this section are exalgorithmic amples of so-called algorithmic mechanism design. This term describes settings mechanism in which a center wants to solve an optimization problem, but the inputs to this design problemaretheprivateinformationofself-interestedagents. Thecentermustthus design a mechanism that solves the optimization while inducing the agents to revealtheirinformationtruthfully. Observethatthissettingdoesnotreallydescribe adifferentproblemfromclassicalmechanismdesign,thoughitdoesadoptadifferentperspective.Italsotendstodescribeworkthathasasomewhatdifferentflavor, oftenemphasizingapproximationalgorithmsandworst-caseanalysis. 10.6.1 Taskscheduling One problem that has been well studied in the contextof algorithmic mechanism design is that of task scheduling. Consider n agents who can perform tasks and a setT tasksthat mustbe allocated. Each agenti’s type t is a vector,givingthe i minimum amount of time t in which i can perform each task j. The center’s i,j makespan goal is to minimize the completion time of the last task, called the makespan. A choicexbythemechanismisanallocationofeachtasktosomeagent;agentsmust perform the tasks they are assigned. Let x(i,j) equal 1 if an agent i is assigned task j, and zero otherwise. Note that some agents may be given more than one taskandsomemaynotbegivenataskatall. Themechanismis abletoverifythe agents’work, observingthe true amountof time it took an agent to complete his tasks. Wewritethetrueamountoftimeispentontaskj ast˜ ;ofcourset˜ must i,j i,j alwaysbegreaterthanorequaltot . Anagenti’svaluationforachoicexbythe i,j mechanismis x(i,j)t˜ , thesum ofthe true amountsoftime he spends − j∈T i,j onhisassignedtasks. Ofcourse,anagenticanlieabouttheamountoftimeitwill takehimtoperfo P rmatask. Wedenotethetupleofallagents’declarationsastˆ. ThetaskschedulingproblemcannotbesolvedwithaGrovesmechanism.While suchamechanismwouldindeedprovideagentswithdominantstrategiesfortruthfully revealingtheir types, it would choosethe wrongallocation, maximizingthe sum of agents’ welfare rather than minimizing the makespan. Indeed, note that Freeforon-screenuse;pleasedonotdistribute.Youcangetanotherfreecopy ofthisPDFororderthebookathttp://www.masfoundations.org. 308 10 ProtocolsforStrategicAgents:MechanismDesign makespanis like a worst-case version of social welfare: it measures the unhappiness of the unhappiest agent, and ignores the other agents completely. Another family of mechanismsdoes work for solving the task allocation scheduling problem. ThesemechanismscanbeunderstoodasgeneralizingGrovesmechanismsto objectivefunctionsotherthansocialwelfare. Definition10.6.1(Compensationandpenaltymechanisms) Compensation and compensation penaltymechanismsarequasilinearmechanisms(x,℘),forwhich andpenalty mechanism x(tˆ) = argmin max x(i,j)tˆ i,j x (cid:18) i∈N j∈T (cid:19) X ℘ (tˆ) = h (tˆ ) x(i,j)t˜ +max x(i,j)t˜ , max x(i′,j)tˆ . i i −i i,j i,j i′,j − i′6=i∈N j∈T (cid:26)j∈T j∈T (cid:27) X X X Thus, the mechanism selects the choice that minimizes makespan, given the agents’declarations. Whattypesshouldagentsdeclare? Shouldagentssolvetasks as quickly as possible, or can they increase their utilities by taking longer? An answerisgivenbythefollowingtheorem. Theorem10.6.2 Compensationandpenaltymechanismsaredominant-strategyincentive compatible: agents choose to complete their tasks as quickly as possible (t˜ = t )andtoreportthesecompletiontimestruthfully(tˆ = t ). i,j i,j i,j i,j Proof. Thefirstterminthepaymentfunction℘ ,h (tˆ ),doesnotdependon i i −i i’s declaration. Thusitdoesnotaffecti’s incentives,andsowecandisregard it. Therestof℘ consistsoftwoterms. Thesecondtermisapaymenttoagent i i equal to his true cost for his assigned tasks. This payment exactly compensatesiforanytaskshewasassigned,makinghimindifferentbetweenalltask assignmentsregardlessofhowlonghespentcompletinghistasks. The third term of ℘ is a penalty to i in the amount of the mechanism’s i objectivefunction, exceptthat i’s actual task completiontime is used instead ofhis declaredtime. The strategicproblemfor iis thus to choosethe t˜andtˆ that will lead the mechanism to select the x that makes this penalty as small aspossible. Bychoosingt˜ > t ,idoesnotinfluencex(thisdependsonly i,j i,j on tˆ ) and can only increase his penalty. t˜ < t is impossible, and so i,j i,j i,j it is a dominant strategy for i to choose t˜ = t . If i declares tˆ > t , i,j i,j i,j i,j thenhecanonlyincreasethemakespanandhencehispenalty,bymakingthe mechanismallocatetaskssuboptimallytotheotheragents.