those acts to maintain the dialog. It extends speech act theory by creating a hierarchyofconversationacts,asshowninTable8.1. Asyoucansee,speechacts appearinthisframeworkastheconversationactsthatoccuratthediscourselevel. Workflowsystems Anotherusefulapplicationofspeechacttheoryis inworkflowsoftware,software usedtotrackandmanagecomplexinteractionswithinandbetweenhumanorganizations. These interactions range from simple business transactions to long-term collaborativeprojects,andeachrequirestheinvolvementofmanydifferenthuman participants. To track andmanagethe interactions effectively, workflow software providesamediumforstructuredcommunicationsbetweenalloftheparticipants. UncorrectedmanuscriptofMultiagentSystems,publishedbyCambridgeUniversityPress Revision1.1©Shoham&Leyton-Brown,2009,2010. 8.3 “Doingbytalking”II:speech-acttheory 249 Many workflow applications are designed around an information processing framework,inwhich,forexample,interactionsmaybemodeledasassertionsand queriesto adatabase. This perspectiveis useful, butlacksan explicitunderstanding and representation of the pragmatic structure of human communications. An alternative is to view each communication as an illocutionary speech act, which statesanintentiononthepartofthesenderandplacesconstraintsonthepossible responses of the recipient. Instead of generic messages, as in the case of email communications,usersmustchoosefromasetofcommunicationtypeswhencomposingmessagestootherparticipants.Withinthisframework,theycanwritefreely. Forexample,whenrespondingtoarequest,usersmightbegiventhefollowingoptions. • Acknowledge • Promise • Freeform • Counteroffer • Commit-to-commit • Decline • Interimreport • Reportcompletion The speech act framework confers a number of advantages to developers and users of workflow software. Because the basic unit of communication is a conversation, rather than a message, the organization of communications is straightforward, and retrieval simple. Furthermore, the status and urgency of messages is clear. Users can ask “In which conversationsis someone waiting for me to do something?” or “In which conversationshaveI promisedto do things?”. Finally, access to messages can be organized and controlled easily, depending on project involvementand authorization levels. The downside is that it involves additional overheadin the communication,which may notbe justified by the benefits, especially if the conversational structures implemented in the system do not capture welltherichsetofcommunicationsthattakesplaceintheworkplace. Agentcommunicationlanguages Perhapsthemostwidespreaduseofspeechacttheorywithinthefieldofcomputer science is for communication between software applications. Increasingly, computersystems are structured in such a way that individualapplications can act as agents(e.g.,withthepopularizationoftheInternetandelectroniccommerce),each with its owngoalsandplanningmechanisms. In suchasystem, software applications mustcommunicatewith eachother and with their human users to enlist the support of other agents to achieve goals, to commit to helping another agent, to reporttheirownstatus,torequestastatusreportfromanother,andsoon. Freeforon-screenuse;pleasedonotdistribute.Youcangetanotherfreecopy ofthisPDFororderthebookathttp://www.masfoundations.org. 250 8 Communication Not surprisingly, several proposals have been made for artificial languages to serveasthemediumforthisinterapplicationcommunication. Arelativelysimple KQML exampleispresentedbyKnowledgeQueryandManipulationLanguage(KQML), which was developed in the early 1990s. KQML incorporates some ideas from speech-acttheory,especiallytheideaofperformatives. Ithasabuilt-insetofperformatives,suchasACHIEVE,ADVERTISE,BROKER,REGISTER,andTELL. ThefollowingisanexampleofaKQMLmessage,takenfromacommunication betweentwoapplicationsoperatingintheblocksworlddomain. (tell :sender Agent1 :receiver Agent2 :language KIF :ontology Blocks-World :content (AND (Block A) (Block B) (On A B))) Note that the messageis a performative. The contentofthe messageuses blocks worldsemantics,whicharecompletelyindependentofthesemanticsoftheperformativeitself. KQML is no longer an influential standard, but the ideas of structured interactionsamongsoftwareagentsthatare basedin partonspeechacts liveonin more XML modern protocols defined on top of abstract markup languagessuch as XML and theso-calledSemanticWeb. SemanticWeb Rationalprogramming Wehavedescribedhowspeechacttheorycanbeusedincommunicationbetween software applications. Some authors have also proposed to use it directly in the developmentofsoftware applications, thatis, as partofa programminglanguage itself. This proposal is part of a more general effort to introduce elements of rationalityintoprogramminglanguages. Thisnewprogrammingparadigmhasbeen rational termed rational programming. Just as object-oriented programming shifted the programming paradigmfromwritingprocedurestocreatingobjects,rationalprogrammingshifts theparadigmfromcreatinginformationalobjectstocreatingmotivationalagents. Sowheredoescommunicationcomein? Themotivationalagentscreatedbyrational programming must act in the world, and because the agents are not likely tohaveaphysicalembodiment,theiractionsconsistofsendingandreceivingsignals; in other words, their actions will be speech acts. Of course, as shown in theprevioussection,itispossibletoconstructcommunicatingagentswithinexistingprogrammingparadigms. However,byincorporatingspeechactsasprimitives, rational programming constructs make such programs more powerful, easier to create,andmorereadable. We give a few examplesfor clarity. Elephant2000is a programminglanguage describedbyMcCarthywhichexplicitlyincorporatesspeechacts. Thus,forexample, an Elephant2000program can make a promise to anotherand cannot renege UncorrectedmanuscriptofMultiagentSystems,publishedbyCambridgeUniversityPress Revision1.1©Shoham&Leyton-Brown,2009,2010. 8.4 Historyandreferences 251