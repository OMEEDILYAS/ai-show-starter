N,thereexistsatimeslotx X suchthatforallT X, ∈ ∈ ⊆ v (T) = v ( x )(eachagentdesiresonlyasingletimeslot,whichmustbethe i i { } firstoneinthecurrentformulation) • Forallagentsi N,andforallR,T X,suchthatR T = ,v (R T)= i ∈ ⊆ ∩ ∅ ∪ v (R)+v (T)(theutilityfunctionsareadditive) i i • Timeslotsaregrosssubstitutes;demandforonetimeslotdoesnotdecreaseif thepriceofanothertimeslotincreases Anauctionalgorithm Perhapsthebest-knowndistributedprotocolforfindingacompetitiveequilibrium ascending- istheso-calledascending-auctionalgorithm. Inthisprotocol,thecenteradvertises auction anaskprice,andtheagentsbidtheaskpriceforbundlesoftimeslotsthatmaximize algorithm theirsurplusatthegivenaskprices. Thisprocessrepeatsuntilthereisnochange. Letb = (b ,...,b )bethebidpricevector,whereb is thehighestbidso far 1 m j fortimeslotx X. LetF = (F ,...,F )bethesetofallocatedslotsforeach j 1 n ∈ agent. Finally, let ǫ be the price increment. The ascending-auction algorithm is giveninFigure2.7. Theascending-auctionalgorithmisverysimilartotheassignmentproblemauctionpresentedintheprevioussection,withonenotabledifference. Insteadofcalculatingabid incrementfromthe differencebetweenthe surplusgainedfromthe bestandsecond-bestobjects,thebidincrementhereisalwaysconstant. Let us considera possible executionofthe algorithm to the sample scheduling problemdiscussedearlier. We useanincrementof$0.25forthisexecutionofthe algorithm. round bidder slotsbidon F=(F1,F2,F3,F4) b 0 1 (9,10) ({9,10},{∅},{∅},{∅}) (3.25,3.25,3,3,3,3,3,3) 1 2 (10,11) ({9},{10,11},{∅},{∅}) (3.25,3.5,3.25,3,3,3,3,3) 2 3 (9) ({∅},{10,11},{9},{∅}) (3.5,3.5,3.25,3,3,3,3,3) . . . . . . . . . . . . . . . 24 1 ∅ ({11,12},{9,10},{∅}, (6.25,6.25,6.25,3.25, {12,13,14,15}) 3.25,3.25,3.25,3.25) Atthis point,noagenthasaprofitablebid,andthe algorithmterminates. However, this convergencedependedon our choice of the increment. Let us consider whathappensifweselectanincrementof$1. Freeforon-screenuse;pleasedonotdistribute.Youcangetanotherfreecopy ofthisPDFororderthebookathttp://www.masfoundations.org. 42 2 DistributedOptimization foreachslotx do j b q j j ← //Settheinitialbidstobethereserveprice foreachagentido F i ← ∅ repeat foreachagenti = 1tondo foreachslotx do j ifx F then j i ∈ p b j j ← else p b +ǫ j j ← //Agentsassumethattheywillgetslotstheyarecurrentlythehighbidderon atthatprice,whiletheymustincrementthebidbyǫtogetanyotherslot. S∗ argmax (v (S) p ) ← S⊆X|S⊇Fi i − j∈S j //Findthebestsubsetofslots,givenyourcurrentoutstandingbids //Agentibecomesthehighbidderforall P slotsinS∗\F i . foreachslotx S∗ F do j i ∈ \ b b +ǫ j j ← ifthereexistsanagentk = isuchthatx F then j k 6 ∈ setF F x k k j ← \{ } //Updatethebiddingpriceandcurrentallocationsoftheotherbidders. F S∗ i ← untilF doesnotchange Figure2.7: Theascending-auctionalgorithm. round bidder slotsbidon F=(F1,F2,F3,F4) b 0 1 (9,10) ({9,10},{∅},{∅},{∅}) (4,4,3,3,3,3,3,3) 1 2 (10,11) ({9},{10,11},{∅},{∅}) (4,5,4,3,3,3,3,3) 2 3 (9) ({∅},{10,11},{9},{∅}) (5,5,4,3,3,3,3,3) 3 4 (12,13,14,15) ({∅},{10,11},{9}, (5,5,4,4,4,4,4,3) {12,13,14,15}) 4 1 (11,12) ({11,12},{10},{9}, (5,5,5,5,4,4,4,3) {13,14,15}) 5 2 (9,10) ({11,12},{9,10},{∅}, (6,6,5,5,4,4,4,3) {13,14,15}) 6 3 (11) ({12},{9,10},{11}, (6,6,6,5,4,4,4,3) {13,14,15}) 7 4 ∅ ({12},{9,10},{11}, (6,6,6,5,4,4,4,3) {13,14,15}) 8 1 ∅ ({12},{9,10},{11}, (6,6,6,5,4,4,4,3) {13,14,15}) UncorrectedmanuscriptofMultiagentSystems,publishedbyCambridgeUniversityPress Revision1.1©Shoham&Leyton-Brown,2009,2010. 2.3 Negotiation,auctionsandoptimization 43 Unfortunately, this bidding process does not reach the competitive equilibrium becausethebiddingincrementisnotsmallenough. Itisalsopossiblefortheascending-auctionalgorithmtonotconvergetoanequilibriumindependentlyofhowsmalltheincrementis. Consideranotherproblemof schedulingjobsonabusyprocessor. Theprocessorhasthreeone-hourtimeslots, at9:00A.M.,10:00A.M.,and11:00A.M.,andtherearethreejobsasshowninthe followingtable. Thereservepriceis$0perhour. job length(λ) deadline(d) worth(w) 1 1hour 11:00A.M. $2.00 2 2hours 12:00P.M. $20.00 3 2hours 12:00P.M. $8.00 Hereanequilibriumexists,buttheascendingauctioncanmissit,ifagent2bidsup the11:00A.M.slot. Despite a lack of a guarantee of convergence, we might still like to be able to claim that if we do converge then we converge to an optimal solution. Unfortunately,notonlycanwenotdothat, wecannotevenboundhowfarthesolutionis from optimal. Consider the following problem. The processor has two one-hour time slots, at 9:00 A.M.and 10:00 A.M.(with reserve prices of $1 and $9, respectively),andtherearetwojobsasshowninthefollowingtable. job length(λ) deadline(d) worth(w) 1 1hour 10:00A.M. $3.00 2 2hours 11:00A.M. $11.00 The ascending-auctionalgorithm will stop with the first slot allocated to agent 1 and the second to agent 2. By adjusting the value to agent 2 and the reserve priceofthe11:00A.M.timeslot,wecancreateexamplesinwhichtheallocationis arbitrarilyfarfromoptimal. Onepropertywe canguarantee,however,is termination. We showthis by contradiction. Assumethatthe algorithmdoesnotconverge. It mustbethe casethat at each round at least one agent bids on at least one time slot, causing the price of that slot to increase. After some