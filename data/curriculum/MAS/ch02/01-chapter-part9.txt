|v(i,j)|).Ob- (i,j) ǫ servethatifǫ = O(1/n)(asdiscussedinCorollary2.3.9),thealgorithm’srunning time is O(n3k), wherek is a constantthat doesnotdependon n, yielding worstcaseperformancesimilartolinearprogramming. 2.3.3 Theschedulingproblemandintegerprogramming Theproblemanditsintegerprogram scheduling Theschedulingprobleminvolvesasetoftimeslotsandasetofagents. Eachagent problem requiressomenumberoftimeslotsandhasadeadline. Intuitively,theagentseach havea taskthatrequiresthe use ofa sharedresource, andthattask lasts a certain number of hours and has a certain deadline. Each agent also has some value for completingthetaskbythedeadline. Formally,wehavethefollowingdefinition. Definition2.3.10(Schedulingproblem) Aschedulingproblemconsistsofatuple C = (N,X,q,v),where • N isasetofnagents • X isasetofmdiscreteandconsecutivetimeslots UncorrectedmanuscriptofMultiagentSystems,publishedbyCambridgeUniversityPress Revision1.1©Shoham&Leyton-Brown,2009,2010. 2.3 Negotiation,auctionsandoptimization 37 • q = (q ,...,q )isareservepricevector,whereq isareservevaluefortime 1 m j slotx ;qcanbethoughtofasthevaluefortheslotoftheowneroftheresource, j thevaluehecouldgetforitbyallocatingitotherthantooneofthenagents. • v = (v ,...,v ), where v , the valuation function of agent i, is a function 1 n i overpossibleallocationsoftimeslots thatisparameterizedbytwo arguments: d ,thedeadlinesofagenti, andλ ,therequirednumberoftimeslotsrequired i i byagenti. ThusforanallocationF 2X,wehavethat i ⊆ w ifF includesλ hoursbefored ; v (F )= i i i i i i 0 otherwise. (cid:26) A solution to a scheduling problem is a vector F = (F ,F ,...,F ), where ∅ 1 n F is thesetoftime slotsassignedtoagenti, andF is thetime slotsthatarenot i ∅ assigned. Thevalueofasolutionisdefinedas V(F) = q + v (F ). j i i j|x Xj∈F∅ X i∈N Asolutionisoptimalifnoothersolutionhasahighervalue. Hereisanexample,involvingschedulingjobsonabusyprocessor. Theprocessor has several discrete time slots for the day—specifically, eight one-hour time slotsfrom9:00A.M.to5:00P.M.. Itsoperatingcostsforceittohaveareserveprice of$3perhour. Therearefourjobs,eachwithitsownlength,deadline,andworth. Theyareshowninthefollowingtable. job length(λ) deadline(d) worth(w) 1 2hours 1:00P.M. $10.00 2 2hours 12:00P.M. $16.00 3 1hours 12:00P.M. $6.00 4 4hours 5:00P.M. $14.50 Evenin this smallexampleit takesa momentto see thatanoptimalsolutionis toallocatethemachinesasfollows. timeslot agent 9:00A.M. 2 10:00A.M. 2 11:00A.M. 1 12:00P.M. 1 13:00P.M. 4 14:00P.M. 4 15:00P.M. 4 16:00P.M. 4 The question is again how to find the optimal schedule algorithmically. The schedulingproblemisinherentlymorecomplexthantheassignmentproblem.The Freeforon-screenuse;pleasedonotdistribute.Youcangetanotherfreecopy ofthisPDFororderthebookathttp://www.masfoundations.org. 38 2 DistributedOptimization reasonisthatthedependenceofagents’valuationfunctionsonthejoblengthand complementarity deadlineexhibitsbothcomplementarityandsubstitutability.Forexample,foragent 1 any two blocks of two hours prior to 1:00 are perfect substitutes. On the other substitutes hand, any two single time slots before the deadline are strongly complementary; alonetheyareworthnothing,buttogethertheyareworththefull$10. Thismakes foramorecomplexsearchspacethaninthecaseofthe assignmentproblem,and whereas the assignment problem is polynomial, the scheduling problem is NPcomplete. Indeed,theschedulingapplicationis merelyaninstanceofthegeneral setpacking setpackingproblem.4 problem Thecomplexnatureoftheschedulingproblemhasmanyramifications. Among other things, this means that we cannot hope to find a polynomial LP encoding of the problem (since linear programming has a polynomial-time solution). We can, however,encodeit as an integerprogram. In the following, foreverysubset S X,thebooleanvariablex willrepresentthefactthatagentiwasallocated i,S ⊆ thebundleS,andv (S)hisvaluationforthatbundle. i maximize v (S)x i i,S S⊆X,i∈N X subjectto x 1 i N i,S ≤ ∀ ∈ S⊆X X x 1 j X i,S ≤ ∀ ∈ S⊆X:j∈S,i∈N X x 0,1 S X,i N i,S ∈ { } ∀ ⊆ ∈ Ingeneral,thelengthoftheoptimizedquantityisexponentialinthesizeofX. In practice,manyofthetermscanbeassumedtobezero,andthusdropped.However, evenwhentheIPissmall,ourproblemsarenotover.IPsarenotingeneralsolvable inpolynomialtime,sowecannothopeforeasyanswers. However,itturnsoutthat ageneralizationoftheauction-likeprocedurecanbeappliedinthiscasetoo. The pricewewillpayforthehighercomplexityoftheproblemis thatthegeneralized algorithm will not come with the same guarantees that we had in the case of the assignmentproblem. Amoregeneralformofcompetitiveequilibrium competitive We start byrevisiting the notionofcompetitiveequilibrium. The definition really equilibrium does not change, but rather is generalized to apply to assignments of bundles of timeslotsratherthansingleobjects. 4. Eventhescheduling problem canbedefinedmuchmorebroadly. Itcouldinvolve earliest starttimes as well as deadlines, could require contiguous blocks of time for a given agent (this turns out that this requirementdoesnotmatterinourcurrentformulation),couldinvolvemorethanoneresource,andsoon. Butthecurrentproblemformulationisrichenoughforourpurposes. UncorrectedmanuscriptofMultiagentSystems,publishedbyCambridgeUniversityPress Revision1.1©Shoham&Leyton-Brown,2009,2010. 2.3 Negotiation,auctionsandoptimization 39 Definition2.3.11(Competitiveequilibrium,generalizedform) Givenaschedulingproblem,asolutionF isincompetitiveequilibriumatpricespifandonlyif • Foralli N itisthecasethatF = argmax (v (T) p )(the ∈ i T⊆X