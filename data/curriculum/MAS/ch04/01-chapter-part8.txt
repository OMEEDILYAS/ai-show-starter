repeatedlyseeks to cover amissinglabel,afterchoosingtheinitialmoveawayfrom(0,0),thepaththrough almost completely labeled pairs to an equilibrium is unique. So while the algorithm is nondeterministic, all the nondeterminism is concentrated in its first move. Finally, it can be used to find more than one Nash equilibrium. The reason the algorithm is initialized to start at the origin is that this is the only pair that is known a priori to be completely labeled. However, once we have found anothercompletelylabeledpair,wecanuseitasthestartingpoint,allowingusto reachadditionalequilibria. Forexample,startingattheequilibriumwejustfound and making an appropriate first choice, we can quickly find another equilibrium by the path 2,1,0 , 1,2 0, 1,2 , 1, 2 0, 1, 2 , 2,1 . 3 3 3 3 → 3 3 3 3 → 3 3 3 3 Theremainingequilibriumcanbefoundusingthefollowingpathfromtheorigin: (cid:0)(cid:0) (cid:1) (cid:0) (cid:1)(cid:1) (cid:0)(cid:0) (cid:1) (cid:0) (cid:1)(cid:1) (cid:0)(cid:0) (cid:1) (cid:0) (cid:1)(cid:1) ((0,0,0),(0,0)) ((0,0,1),(0,0)) ((0,0,1),(1,0)). → → However,thealgorithmisnotwithoutitslimitations. Whilewewereabletouse the algorithm to find all equilibria in our running example, in general we are not guaranteedtobeabletodoso. Aswehaveseen,theLemke–Howsonalgorithmcan bethoughtofasexploringagraphofallcompletelyandalmostcompletelylabeled pairs. The bad news is that this graph can be disconnected, and the algorithm is onlyabletofindtheequilibriaintheconnectedcomponentthatcontainstheorigin (althoughluckily,thereisguaranteedtobeatleastonesuchequilibrium). Notonly are we unable to guarantee that we will find all equilibria—there is not even an efficientwaytodeterminewhetherornotallequilibriahavebeenfound. Evenwith respectto findinga singleequilibriumwe arenottroublefree. First, there is still indeterminacy in the first move, and the algorithm provides no guidance on how to make a good first choice, one that will lead to a relatively short path to the equilibrium, if one exists. And one may not exist—there are cases in which all paths are of exponentiallength (and thus the time complexityof the Lemke–Howsonalgorithmisprovablyexponential). Finally, evenifonegivesup onworst-caseguaranteesandhopesforgoodheuristics,thefactthatthealgorithm hasnoobjectivefunctionmeansthatitprovidesnoobviousguidelinetoassesshow closeitistoasolutionbeforeactuallyfindingone. Nevertheless, despite all these limitations, the Lemke–Howson algorithm remainsakeyelementinunderstandingthealgorithmicstructureofNashequilibria ingeneraltwo-persongames. 4.2.3 Searchingthespaceofsupports Onecanidentifyaspectrumofapproachestothedesignofalgorithms. Atoneend ofthespectrumonecandevelopdeepinsightintothestructureoftheproblem,and craft a highly specialized algorithm based on this insight. The Lemke–Howson algorithmlies closetothis endofthespectrum. Attheotherendofthespectrum, oneidentifiesrelativelyshallowheuristicsandhopesthatthese,coupledwitheverincreasing computing power, will do the job. Of course, in order to be effective, Freeforon-screenuse;pleasedonotdistribute.Youcangetanotherfreecopy ofthisPDFororderthebookathttp://www.masfoundations.org. 102 4 ComputingSolutionConceptsofNormal-FormGames eventhese heuristics must embodysome insightinto the problem. However, this insight tends to be limited and local, yielding rules of thumb that aid in guiding thesearchthroughthe spaceofpossiblesolutions, butthatdonotdirectlyyielda solution. Oneofthelessonsfromcomputerscienceisthatsometimesheuristicapproachescanoutperformmoresophisticatedalgorithmsinpractice. Inthissection wediscusssuchaheuristicalgorithm. Thebasicideabehindthealgorithmisstraightforward. Wefirstnotethatwhile the generalproblemofcomputinga Nash equilibrium(NE) is a complementarity problem,computingwhetherthereexistsaNEwithaparticularsupport9foreach player is a relatively simple feasibility program. So the problem is reduced to searchingthespaceofsupports. Ofcoursethesizeofthisspaceis exponentialin thenumberofactions,andthisiswheretheheuristicscomein. We start with the feasibility program. Givena supportprofile σ = (σ ,σ ) as 1 2 input (where each σ A ), feasibility program TGS (for “test given supports”) i i ⊆ findsaNEpconsistentwithσorprovesthatnosuchstrategyprofileexists. Inthis program, v correspondsto the expectedutility of playeri in an equilibrium, and i thesubscript iindicatestheplayerotherthaniasusual. Thecompleteprogram − follows. p(a )u (a ,a ) = v i 1,2 ,a σ (4.26) −i i i −i i i i ∀ ∈ { } ∈ a−Xi∈σ−i p(a )u (a ,a ) v i 1,2 ,a /σ (4.27) −i i i −i i i i ≤ ∀ ∈ { } ∈ a−Xi∈σ−i p (a ) 0 i 1,2 ,a σ (4.28) i i i i ≥ ∀ ∈ { } ∈ p (a )= 0 i 1,2 ,a /σ (4.29) i i i i ∀