Next, let us consider very weak domination. This flavor of domination does P notrequireanystrictinequalities, so things are easyhere. Here we canconstruct a feasibility program—nearly identical to our earlier failed attempt from Equations(4.39)–(4.41)—whichfollows. p u (a ,a ) u (s ,a ) a A (4.45) j i j −i i i −i −i −i ≥ ∀ ∈ j X ∈Ai p 0 j A (4.46) j i ≥ ∀ ∈ p = 1 (4.47) j j X ∈Ai Finally,letusconsiderweakdominationbyamixedstrategy. Againourinability to write a strict inequality will make things more complicated. However, we can derive an LP by adding an objective function to the feasibility program given in Freeforon-screenuse;pleasedonotdistribute.Youcangetanotherfreecopy ofthisPDFororderthebookathttp://www.masfoundations.org. 112 4 ComputingSolutionConceptsofNormal-FormGames Equations(4.45)–(4.47). maximize p u (a ,a ) u (s ,a ) (4.48) j i j −i i i −i · − " ! # a−Xi∈A−i j X ∈Ai subjectto p u (a ,a ) u (s ,a ) a A j i j −i i i −i −i −i ≥ ∀ ∈ j X ∈Ai (4.49) p 0 j A j i ≥ ∀ ∈ (4.50) p = 1 (4.51) j j X ∈Ai Because of constraint (4.49), any feasible solution will have a nonnegativeobjective value. If the optimal solution has a strictly positive objective, the mixed strategygivenbythep ’sachievesstrictlypositiveexpectedutilityforatleastone j a A ,meaningthats isweaklydominatedbythismixedstrategy. −i −i i ∈ Asaclosingremark,observethatallofourlinearprogramscanbemodifiedto checkwhethera strategy s is strictly dominated by any mixed strategy that only i places positive probability on some subset of i’s actions T A . This can be i ⊂ achieved simply by replacing all occurrences of A by T in the linear programs i givenearlier. 4.5.3 Iterateddominance Finally,weconsidertheiteratedremovalofdominatedstrategies.Weonlyconsider pure strategies as candidates for removal; indeed, as it turns out, it never helps to remove dominated mixed strategies when performing iterated removal. It is important, however, that we consider the possibility that pure strategies may be dominatedbymixedstrategies,aswesawinSection3.4.3. For all three flavors of domination, it requires only polynomial time to iteratively remove dominated strategies until the game has been maximally reduced (i.e., no strategy is dominated for any player). A single step of this process consistsofcheckingwhethereverypurestrategyofeveryplayerisdominatedbyany other mixed strategy, which requires us to solve at worst A linear proi∈N | i | grams. Eachstepremovesonepurestrategyforoneplayer,sotherecanbeatmost P (A 1)steps. i∈N | i |− However, recall that some forms of dominance can produce different reduced P games depending on the order in which dominated strategies are removed. We mightthereforewanttoaskothercomputationalquestions,regardingwhichstrategiesremaininreducedgames. Listedbelowaresomesuchquestions. 1. (Strategyelimination)Doesthereexistsomeeliminationpathunderwhichthe strategys iseliminated? i UncorrectedmanuscriptofMultiagentSystems,publishedbyCambridgeUniversityPress Revision1.1©Shoham&Leyton-Brown,2009,2010. 4.6 Computingcorrelatedequilibria 113 2. (Reduction identity) Given action subsets A′ A for each player i, does i ⊆ i thereexistamaximallyreducedgamewhereeachplayerihastheactionsA′? i 3. (Reductionsize)Givenconstantsk foreachplayeri, doesthereexistamaxii mallyreducedgamewhereeachplayerihasexactlyk actions? i Itturnsoutthatthecomplexityofansweringthesequestionsdependsontheform ofdominationunderconsideration. Theorem4.5.1 For iterated strict dominance, the strategyelimination, reduction identity,uniquenessandreductionsizeproblemsareinP.Foriteratedweakdominance,theseproblemsareNP-complete. The firstpartofthis result, consideringiterated strictdominance,is straightforward: it follows from the fact that iterated strict dominance always arrives at the samesetofstrategiesregardlessofeliminationorder. Thesecondpartistricker;indeed,ourstatementofthistheoremsweepsunderthecarpetsomesubtletiesabout whetherdominationby mixed strategies is considered(it is in some cases, and is notinothers)andtheminimumnumberofutilityvaluespermittedforeachplayer. Forallthedetails,thereadershouldconsultthepaperscitedattheendofthechapter. 4.6 Computing correlated equilibria Thefinalsolutionconceptthatwewillconsideriscorrelatedequilibrium. Itturns outthatcorrelatedequilibriaare(probably)easiertocomputethanNashequilibria: asamplecorrelatedequilibriumcanbefoundinpolynomialtimeusingalinearprogrammingformulation.Itisnothardtosee(e.g.,fromtheproofofTheorem3.4.13) that every game has at least one correlated equilibrium in which the value of the randomvariablecanbeinterpretedasarecommendationtoeachagentofwhatactiontoplay,andinequilibriumtheagentsallfollowtheserecommendations.Thus,