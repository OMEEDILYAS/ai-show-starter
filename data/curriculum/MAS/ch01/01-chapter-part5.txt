the link), tries to find an assignment for his variable thatdoesnotviolateaconstraintwiththeassignmenthereceived. ok? messagesaremessagescarryinganagent’s variableassignment. When an agentA receivesan ok? messagefrom agentA , A places the received assigni j i ment in a data structure called agent_view, which holds the last assignmentA i receivedfromhigher-priorityneighborssuchasA . Next,A checksifhiscurrent j i assignment is still consistent with his agent_view. If it is consistent, A does i nothing. Ifnot,thenA searcheshisdomainforanewconsistentvalue. Ifhefinds i one,heassignshisvariablethatvalueandsendsok? messagestoalllower-priority agentslinkedtohiminformingthemofthisvalue. Otherwise,A backtracks. i The backtrack operation is executed by sending a Nogood message. Recall thataNogoodissimplyaninconsistentpartialassignment,thatis,assignmentsof specificvaluestosomeofthevariablesthattogetherviolatetheconstraintsonthose variables. Inthiscase,theNogoodconsistsofA ’sagent_view.2 TheNogoodis i senttotheagentwiththelowestpriorityamongtheagentswhoseassignmentsare includedin the inconsistenttuple in the Nogood. AgentA who sends a Nogood i messageto agentA assumes that A will changehis assignment. Therefore, A j j i removesfromhisagent_viewtheassignmentofA andmakesanattempttofind j anassignmentforA ’svariablethatisconsistentwiththeupdatedagent_view. j Because of its reliance on building up a set of Nogoods, the ABT algorithm canbe seen as a greedyversionofthe hyper-resolutionalgorithm ofthe previous section.Inthelatter,allpossibleNogoodsaregeneratedbyeachagentandcommunicated to all neighbors, eventhough the vast majority of these messages are not 2. Welaterdiscussschemesthatachievebetterperformancebyavoidingalwayssendingthisentireset. UncorrectedmanuscriptofMultiagentSystems,publishedbyCambridgeUniversityPress Revision1.1©Shoham&Leyton-Brown,2009,2010. 1.3 Heuristicsearchalgorithms 11 useful. Here,agentsmaketentativechoicesofavaluefortheirvariables,onlygenerateNogoodsthatincorporatevaluesalreadygeneratedbytheagentsabovethem intheorder,and—importantly—communicatenewvaluesonlytosomeagentsand newNogoodstoonlyoneagent. BelowisthepseudocodeoftheABTalgorithm,specifyingtheprotocolforagent A . i whenreceived(Ok?,(A ,d ))do j j add(A ,d )toagent_view j j check_agent_view whenreceived(Nogood,nogood)do addnogoodtoNogoodlist forall (A ,d ) nogood,ifA isnotaneighborofA do k k k i ∈ add(A ,d )toagent_view k k requestA toaddA asaneighbor k i check_agent_view procedurecheck_agent_view whenagent_viewandcurrent_valueareinconsistentdo if novalueinD isconsistentwithagent_viewthen i backtrack else selectd D consistentwithagent_view i ∈ current_value d ← send(ok?,(A ,d))tolower-priorityneighbors i procedurebacktrack nogood someinconsistentset,usinghyper-resolutionorsimilarprocedure ← ifnogoodistheemptysetthen broadcasttootheragentsthatthereisnosolution terminatethisalgorithm else select(A ,d ) nogoodwhereA hasthelowestpriorityinnogood j j j ∈ send(Nogood,nogood)toA j remove(A ,d )fromagent_view j j check_agent_view Notice a certain wrinkle in the pseudocode, having to do with the addition of edges.SincetheNogoodcanincludeassignmentsofsomeagentA ,whichA was j i notpreviouslyconstrainedwith, afteraddingA ’s assignmentto its agent_view j Freeforon-screenuse;pleasedonotdistribute.Youcangetanotherfreecopy ofthisPDFororderthebookathttp://www.masfoundations.org. 12 1 DistributedConstraintSatisfaction A sendsamessagetoA askingittoaddA toitslistofoutgoinglinks. Furtheri j i more,afteraddingthelink,A sendsanok? messagetoA eachtimeitreassigns j i itsvariable.AfterstoringtheNogood,A checksifitsassignmentisstillconsistent. i Ifitis,amessageissenttotheagenttheNogoodwasreceivedfrom. Thisresending of the assignment is crucial since, as mentioned earlier, the agent sending a Nogood assumes that the receiver of the Nogood replaces its assignment. Therefore it needsto know that the assignmentis still valid. If the old assignmentthat was forbidden by the Nogood is inconsistent, A tries to find a new assignment i similarlytothecasewhenanok? messageisreceived. 1.3.2 Asimpleexample In Section 1.3.3 we give a more elaborate example, but here is a brief illustration of the operation of the ABT algorithm on one of the simple problems encountered earlier. Consider again the instance (c) of the CSP in Figure 1.4, and assumetheagentsareorderedalphabetically: x ,x ,x . Theyinitiallyselectval1 2 3 ues at random; suppose they all select blue. x notifies x and x of his choice, 1 2 3 and x notifies x . x ’s local view is thus x = blue , and x ’s local view is 2 3 2 1 3 { } x = blue,x = blue . x and x must check for consistency of their local 1 2 2 3 { } viewswiththeirownvalues. x detectstheconflict,changeshisownvaluetored, 2 and notifies x . In the meantime, x also checks for consistency and similarly 3 3 changeshisvaluetored;he,however,notifiesnoone. Thenx receivesasecond