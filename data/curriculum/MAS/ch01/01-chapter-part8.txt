successors (to whom the 1 Nogood messages were sent) from their agent_views and therefore remain in theirpositions,whicharenowconflictfree. Freeforon-screenuse;pleasedonotdistribute.Youcangetanotherfreecopy ofthisPDFororderthebookathttp://www.masfoundations.org. 16 1 DistributedConstraintSatisfaction (cid:68)(cid:52) (cid:68)(cid:52) (cid:68)(cid:53) Nogood (cid:68)(cid:53) (cid:68)(cid:54) (cid:68)(cid:54) Nogood Nogood (cid:68)(cid:55) (cid:68)(cid:55) Figure1.10:Cycle6. OnlyA isactive. Figure 1.11: Cycles 7 and 8. A is ac4 3 TheNogoodmessageisA = 1 A = tiveinthefirstcycleandA isactivein 1 2 2 ∧ 4 A = 2. the second. The Nogood messages are 3 → 6 A = 1 A = 4andA = 1. 1 2 1 → 6 6 (cid:68)(cid:52) OK? (cid:68)(cid:53) (cid:68)(cid:54) OK? (cid:68)(cid:55) OK? (cid:68)(cid:52) (cid:68)(cid:53) (cid:68)(cid:54) OK? (cid:68)(cid:55) Figure1.12:Cycle9. OnlyA isactive. Figure 1.13: Cycle 10. Only A is ac1 3 tive. Cycle9involvesonlyagentA ,whoreceivestheNogoodmessagefromA and 1 2 so movesto his nextvalue—square2. Next, he sends ok? messages to his three successors. The final cycle is cycle 10. Agent A receives the ok? message of A and so 3 1 movesto a consistentvalue—square1 ofhis row. Agents A andA checktheir 2 4 Agent_Views after receiving the same ok? messages from agent A and find 1 that their current values are consistent with the new position of A . Agent A 1 3 sends an ok? message to his successor A , informing of his move, but A finds 4 4 no reason to move. His value is consistent with all value assignments of all his predecessors.Aftercycle10allagentsremainidle,havingnoconstraintviolations with assignments on their agent_views. Thus, this is a final state of the ABT algorithminwhichitfindsasolution. UncorrectedmanuscriptofMultiagentSystems,publishedbyCambridgeUniversityPress Revision1.1©Shoham&Leyton-Brown,2009,2010. 1.3 Heuristicsearchalgorithms 17 1.3.4 BeyondtheABTalgorithm TheABTalgorithmisthebackboneofmodernapproachestodistributedconstraint satisfaction,butitadmitsmanyextensionsandmodifications. Amajormodificationhastodowithwhichinconsistentpartialassignment(i.e., Nogood)issentinthebacktrackmessage. Intheversionpresentedearlier,which is the early version of ABT, the full agent_view is sent. However, the full agent_viewisinmanycasesnotaminimalNogood;astrictsubsetofitmayalso be inconsistent. In general, shorter Nogoods can lead to a more efficient search process,sincetheypermitbackjumpingfurtherupthesearchtree. Hereisanexample. ConsideranagentA holdinganinconsistentagent_view 6 with the assignments of agents A , A , A , A and A . If we assume that A 1 2 3 4 5 6 is only constrained by the current assignments of A and A , sending a Nogood 1 3 message to A that contains all the assignments in the agent_view seems to be 5 a waste. After sending the Nogood to A , A will remove his assignment from 5 6 the agent_view and make another attempt to assign his variable, which will be followedbyanadditionalNogoodsenttoA andtheremovalofA ’sassignment 4 4 from the agent_view. These attempts will continue until a minimal subset is sent as a Nogood. In this example, it is the Nogood sent to A . The assignment 3 with the lower priority in the minimal inconsistent subset is removed from the agent_view and a consistentassignmentcan now be found. In this examplethe computation ended by sending a Nogood to the culprit agent, which would have beentheoutcomeiftheagentcomputedaminimalsubset. Thesolutiontothisinefficiency,however,isnotstraightforward,sincefindinga minimalNogoodis in generalintractable(specifically, NP-hard). And so various heuristics are needed to cut down on the size of the Nogood, without sacrificing correctness. ArelatedissueisthenumberofNogoodsstoredbyeachagent. Inthepreceding ABTversion,eachNogoodisrecordedbythereceivingagent. Sincethenumberof inconsistentsubsetscanbeexponential,constraintlists with exponentialsizewill be created, and a search throughsuch lists requires exponentialtime in the worst case. Variousproposalshavebeenmadetocutdownonthisnumberwhilepreserving correctness. One proposal is that agents keep only Nogoods consistent with their agent_view. While this prunes